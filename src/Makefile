# Makefile.in generated by automake 1.10 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/ta3d
pkglibdir = $(libdir)/ta3d
pkgincludedir = $(includedir)/ta3d
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = ta3d$(EXEEXT) 3dmeditor$(EXEEXT) hpiview$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_3dmeditor_OBJECTS = 3dmeditor.$(OBJEXT) 3dmeditor_sub.$(OBJEXT) \
	cTAFileParser.$(OBJEXT) 3ds.$(OBJEXT) i18n.$(OBJEXT) \
	gfx.$(OBJEXT) 3do.$(OBJEXT) console.$(OBJEXT) gaf.$(OBJEXT) \
	glfunc.$(OBJEXT) gui.$(OBJEXT) particles.$(OBJEXT) \
	taconfig.$(OBJEXT) stdafx.$(OBJEXT) TA3D_Audio.$(OBJEXT) \
	TA3D_Exception.$(OBJEXT) TA3D_hpi.$(OBJEXT) \
	TA3D_NameSpace.$(OBJEXT) cThread.$(OBJEXT) \
	cCriticalSection.$(OBJEXT) cInterface.$(OBJEXT) \
	cLogger.$(OBJEXT) cError.$(OBJEXT) decode.$(OBJEXT) \
	encode.$(OBJEXT) io.$(OBJEXT) ta3d_jpg.$(OBJEXT)
3dmeditor_OBJECTS = $(am_3dmeditor_OBJECTS)
3dmeditor_LDADD = $(LDADD)
am_hpiview_OBJECTS = hpiview.$(OBJEXT) install.$(OBJEXT) \
	cTAFileParser.$(OBJEXT) i18n.$(OBJEXT) \
	TA3D_Exception.$(OBJEXT) glfunc.$(OBJEXT) gfx.$(OBJEXT) \
	gaf.$(OBJEXT) console.$(OBJEXT) TA3D_hpi.$(OBJEXT) \
	TA3D_NameSpace.$(OBJEXT) stdafx.$(OBJEXT) cThread.$(OBJEXT) \
	cCriticalSection.$(OBJEXT) cInterface.$(OBJEXT) \
	cLogger.$(OBJEXT) cError.$(OBJEXT) decode.$(OBJEXT) \
	encode.$(OBJEXT) io.$(OBJEXT) ta3d_jpg.$(OBJEXT)
hpiview_OBJECTS = $(am_hpiview_OBJECTS)
hpiview_LDADD = $(LDADD)
am_ta3d_OBJECTS = ta3d.$(OBJEXT) main.$(OBJEXT) install.$(OBJEXT) \
	i18n.$(OBJEXT) cTA3D_Engine.$(OBJEXT) cTAFileParser.$(OBJEXT) \
	gfx.$(OBJEXT) pathfinding.$(OBJEXT) menu.$(OBJEXT) \
	3do.$(OBJEXT) cob.$(OBJEXT) console.$(OBJEXT) \
	EngineClass.$(OBJEXT) UnitEngine.$(OBJEXT) fbi.$(OBJEXT) \
	gaf.$(OBJEXT) glfunc.$(OBJEXT) gui.$(OBJEXT) intro.$(OBJEXT) \
	particles.$(OBJEXT) lzw.$(OBJEXT) tdf.$(OBJEXT) tnt.$(OBJEXT) \
	weapons.$(OBJEXT) script.$(OBJEXT) ai.$(OBJEXT) \
	taconfig.$(OBJEXT) icon.$(OBJEXT) stdafx.$(OBJEXT) \
	TA3D_Audio.$(OBJEXT) TA3D_Exception.$(OBJEXT) \
	TA3D_hpi.$(OBJEXT) TA3D_NameSpace.$(OBJEXT) cThread.$(OBJEXT) \
	cCriticalSection.$(OBJEXT) cInterface.$(OBJEXT) \
	cLogger.$(OBJEXT) cError.$(OBJEXT) decode.$(OBJEXT) \
	encode.$(OBJEXT) io.$(OBJEXT) ta3d_jpg.$(OBJEXT)
ta3d_OBJECTS = $(am_ta3d_OBJECTS)
ta3d_LDADD = $(LDADD)
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(3dmeditor_SOURCES) $(hpiview_SOURCES) $(ta3d_SOURCES)
DIST_SOURCES = $(3dmeditor_SOURCES) $(hpiview_SOURCES) $(ta3d_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/roland/progc++/ta3d/missing --run aclocal-1.10
ALLEGRO_CONFIG = /usr/local/bin/allegro-config
AMTAR = ${SHELL} /home/roland/progc++/ta3d/missing --run tar
AUTOCONF = ${SHELL} /home/roland/progc++/ta3d/missing --run autoconf
AUTOHEADER = ${SHELL} /home/roland/progc++/ta3d/missing --run autoheader
AUTOMAKE = ${SHELL} /home/roland/progc++/ta3d/missing --run automake-1.10
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O0 -I/usr/local/include -ffast-math -mmmx
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GREP = /bin/grep
INSTALL = ../install-sh
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = -lfmodex64 -lz -lGLU -lGL  -lagl -L./lua/ -llua -L/usr/local/lib -Wl,--export-dynamic -lalleg-4.2.2 -lalleg_unsharable
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/roland/progc++/ta3d/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = ta3d
PACKAGE_BUGREPORT = zuzuf86@gmail.com
PACKAGE_NAME = TA3D
PACKAGE_STRING = TA3D 0.4.2
PACKAGE_TARNAME = ta3d
PACKAGE_VERSION = 0.4.2
PATH_SEPARATOR = :
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
VERSION = 0.4.2
abs_builddir = /home/roland/progc++/ta3d/src
abs_srcdir = /home/roland/progc++/ta3d/src
abs_top_builddir = /home/roland/progc++/ta3d
abs_top_srcdir = /home/roland/progc++/ta3d
ac_ct_CC = gcc
ac_ct_CXX = g++
allegro_CFLAGS = -I/usr/local/include
allegro_LIBS = -L/usr/local/lib -Wl,--export-dynamic -lalleg-4.2.2 -lalleg_unsharable
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/roland/progc++/ta3d/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_builddir = ..
top_srcdir = ..
ta3d_SOURCES = \
	ta3d.cpp ta3d.h \
	main.cpp \
	install.cpp \
	i18n.cpp i18n.h \
	cTA3D_Engine.cpp cTA3D_Engine.h \
	cTAFileParser.cpp cTAFileParser.h \
	gfx.cpp gfx.h \
	pathfinding.cpp pathfinding.h \
	menu.cpp menu.h \
	3do.cpp 3do.h \
	cob.cpp cob.h \
	console.cpp console.h \
	EngineClass.cpp EngineClass.h \
	UnitEngine.cpp UnitEngine.h \
	fbi.cpp fbi.h \
	gaf.cpp gaf.h \
	glfunc.cpp glfunc.h \
	gui.cpp gui.h \
	intro.cpp intro.h \
	particles.cpp particles.h \
	lzw.cpp lzw.h \
	tdf.cpp tdf.h \
	tnt.cpp tnt.h \
	weapons.cpp weapons.h \
	script.cpp script.h \
	ai.cpp ai.h \
	taconfig.cpp taconfig.h \
	icon.cpp \
	stdafx.cpp stdafx.h \
	TA3D_Audio.cpp TA3D_Audio.h \
	TA3D_Exception.cpp TA3D_Exception.h \
	hash_table.h \
	TA3D_hpi.cpp TA3D_hpi.h \
	TA3D_NameSpace.cpp TA3D_NameSpace.h \
	cThread.cpp cThread.h \
	cCriticalSection.cpp cCriticalSection.h \
	cInterface.cpp cInterface.h \
	cLogger.cpp cLogger.h \
	cError.cpp cError.h \
	jpeg/decode.cpp jpeg/encode.cpp jpeg/io.cpp jpeg/ta3d_jpg.cpp \
	jpeg/dct.h jpeg/internal.h jpeg/ta3d_jpg.h \
	TA3D_Platform.h matrix.h ta3dbase.h vector.h thread.h


#	SocketClass.cpp SocketClass.h
#	ta3dsock.cpp ta3dsock.h
#	superqueue.cpp superqueue.h
#	network.cpp network.h
3dmeditor_SOURCES = \
	3dmeditor.cpp ta3d.h \
	3dmeditor_sub.cpp 3dmeditor.h \
	cTAFileParser.cpp cTAFileParser.h \
	3ds.cpp 3ds.h \
	i18n.cpp i18n.h \
	gfx.cpp gfx.h \
	3do.cpp 3do.h \
	console.cpp console.h \
	gaf.cpp gaf.h \
	glfunc.cpp glfunc.h \
	gui.cpp gui.h \
	particles.cpp particles.h \
	taconfig.cpp taconfig.h \
	stdafx.cpp stdafx.h \
	TA3D_Audio.cpp TA3D_Audio.h \
	TA3D_Exception.cpp TA3D_Exception.h \
	hash_table.h \
	TA3D_hpi.cpp TA3D_hpi.h \
	TA3D_NameSpace.cpp TA3D_NameSpace.h \
	cThread.cpp cThread.h \
	cCriticalSection.cpp cCriticalSection.h \
	cInterface.cpp cInterface.h \
	cLogger.cpp cLogger.h \
	cError.cpp cError.h \
	jpeg/decode.cpp jpeg/encode.cpp jpeg/io.cpp jpeg/ta3d_jpg.cpp \
	jpeg/dct.h jpeg/internal.h jpeg/ta3d_jpg.h \
	TA3D_Platform.h matrix.h ta3dbase.h vector.h thread.h

hpiview_SOURCES = \
	hpiview.cpp \
	hash_table.h \
	install.cpp \
	cTAFileParser.cpp cTAFileParser.h \
	i18n.cpp i18n.h \
	TA3D_Exception.cpp TA3D_Exception.h \
	glfunc.cpp glfunc.h \
	gfx.cpp gfx.h \
	gaf.cpp gaf.h \
	console.cpp console.h \
	TA3D_hpi.cpp TA3D_hpi.h \
	TA3D_NameSpace.cpp TA3D_NameSpace.h \
	stdafx.cpp stdafx.h \
	cThread.cpp cThread.h \
	cCriticalSection.cpp cCriticalSection.h \
	cInterface.cpp cInterface.h \
	cLogger.cpp cLogger.h \
	cError.cpp cError.h \
	jpeg/decode.cpp jpeg/encode.cpp jpeg/io.cpp jpeg/ta3d_jpg.cpp \
	jpeg/dct.h jpeg/internal.h jpeg/ta3d_jpg.h \
	TA3D_Platform.h matrix.h ta3dbase.h vector.h thread.h

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
3dmeditor$(EXEEXT): $(3dmeditor_OBJECTS) $(3dmeditor_DEPENDENCIES) 
	@rm -f 3dmeditor$(EXEEXT)
	$(CXXLINK) $(3dmeditor_OBJECTS) $(3dmeditor_LDADD) $(LIBS)
hpiview$(EXEEXT): $(hpiview_OBJECTS) $(hpiview_DEPENDENCIES) 
	@rm -f hpiview$(EXEEXT)
	$(CXXLINK) $(hpiview_OBJECTS) $(hpiview_LDADD) $(LIBS)
ta3d$(EXEEXT): $(ta3d_OBJECTS) $(ta3d_DEPENDENCIES) 
	@rm -f ta3d$(EXEEXT)
	$(CXXLINK) $(ta3d_OBJECTS) $(ta3d_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/3dmeditor.Po
include ./$(DEPDIR)/3dmeditor_sub.Po
include ./$(DEPDIR)/3do.Po
include ./$(DEPDIR)/3ds.Po
include ./$(DEPDIR)/EngineClass.Po
include ./$(DEPDIR)/TA3D_Audio.Po
include ./$(DEPDIR)/TA3D_Exception.Po
include ./$(DEPDIR)/TA3D_NameSpace.Po
include ./$(DEPDIR)/TA3D_hpi.Po
include ./$(DEPDIR)/UnitEngine.Po
include ./$(DEPDIR)/ai.Po
include ./$(DEPDIR)/cCriticalSection.Po
include ./$(DEPDIR)/cError.Po
include ./$(DEPDIR)/cInterface.Po
include ./$(DEPDIR)/cLogger.Po
include ./$(DEPDIR)/cTA3D_Engine.Po
include ./$(DEPDIR)/cTAFileParser.Po
include ./$(DEPDIR)/cThread.Po
include ./$(DEPDIR)/cob.Po
include ./$(DEPDIR)/console.Po
include ./$(DEPDIR)/decode.Po
include ./$(DEPDIR)/encode.Po
include ./$(DEPDIR)/fbi.Po
include ./$(DEPDIR)/gaf.Po
include ./$(DEPDIR)/gfx.Po
include ./$(DEPDIR)/glfunc.Po
include ./$(DEPDIR)/gui.Po
include ./$(DEPDIR)/hpiview.Po
include ./$(DEPDIR)/i18n.Po
include ./$(DEPDIR)/icon.Po
include ./$(DEPDIR)/install.Po
include ./$(DEPDIR)/intro.Po
include ./$(DEPDIR)/io.Po
include ./$(DEPDIR)/lzw.Po
include ./$(DEPDIR)/main.Po
include ./$(DEPDIR)/menu.Po
include ./$(DEPDIR)/particles.Po
include ./$(DEPDIR)/pathfinding.Po
include ./$(DEPDIR)/script.Po
include ./$(DEPDIR)/stdafx.Po
include ./$(DEPDIR)/ta3d.Po
include ./$(DEPDIR)/ta3d_jpg.Po
include ./$(DEPDIR)/taconfig.Po
include ./$(DEPDIR)/tdf.Po
include ./$(DEPDIR)/tnt.Po
include ./$(DEPDIR)/weapons.Po

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

decode.o: jpeg/decode.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT decode.o -MD -MP -MF $(DEPDIR)/decode.Tpo -c -o decode.o `test -f 'jpeg/decode.cpp' || echo '$(srcdir)/'`jpeg/decode.cpp
	mv -f $(DEPDIR)/decode.Tpo $(DEPDIR)/decode.Po
#	source='jpeg/decode.cpp' object='decode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o decode.o `test -f 'jpeg/decode.cpp' || echo '$(srcdir)/'`jpeg/decode.cpp

decode.obj: jpeg/decode.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT decode.obj -MD -MP -MF $(DEPDIR)/decode.Tpo -c -o decode.obj `if test -f 'jpeg/decode.cpp'; then $(CYGPATH_W) 'jpeg/decode.cpp'; else $(CYGPATH_W) '$(srcdir)/jpeg/decode.cpp'; fi`
	mv -f $(DEPDIR)/decode.Tpo $(DEPDIR)/decode.Po
#	source='jpeg/decode.cpp' object='decode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o decode.obj `if test -f 'jpeg/decode.cpp'; then $(CYGPATH_W) 'jpeg/decode.cpp'; else $(CYGPATH_W) '$(srcdir)/jpeg/decode.cpp'; fi`

encode.o: jpeg/encode.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT encode.o -MD -MP -MF $(DEPDIR)/encode.Tpo -c -o encode.o `test -f 'jpeg/encode.cpp' || echo '$(srcdir)/'`jpeg/encode.cpp
	mv -f $(DEPDIR)/encode.Tpo $(DEPDIR)/encode.Po
#	source='jpeg/encode.cpp' object='encode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o encode.o `test -f 'jpeg/encode.cpp' || echo '$(srcdir)/'`jpeg/encode.cpp

encode.obj: jpeg/encode.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT encode.obj -MD -MP -MF $(DEPDIR)/encode.Tpo -c -o encode.obj `if test -f 'jpeg/encode.cpp'; then $(CYGPATH_W) 'jpeg/encode.cpp'; else $(CYGPATH_W) '$(srcdir)/jpeg/encode.cpp'; fi`
	mv -f $(DEPDIR)/encode.Tpo $(DEPDIR)/encode.Po
#	source='jpeg/encode.cpp' object='encode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o encode.obj `if test -f 'jpeg/encode.cpp'; then $(CYGPATH_W) 'jpeg/encode.cpp'; else $(CYGPATH_W) '$(srcdir)/jpeg/encode.cpp'; fi`

io.o: jpeg/io.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT io.o -MD -MP -MF $(DEPDIR)/io.Tpo -c -o io.o `test -f 'jpeg/io.cpp' || echo '$(srcdir)/'`jpeg/io.cpp
	mv -f $(DEPDIR)/io.Tpo $(DEPDIR)/io.Po
#	source='jpeg/io.cpp' object='io.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o io.o `test -f 'jpeg/io.cpp' || echo '$(srcdir)/'`jpeg/io.cpp

io.obj: jpeg/io.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT io.obj -MD -MP -MF $(DEPDIR)/io.Tpo -c -o io.obj `if test -f 'jpeg/io.cpp'; then $(CYGPATH_W) 'jpeg/io.cpp'; else $(CYGPATH_W) '$(srcdir)/jpeg/io.cpp'; fi`
	mv -f $(DEPDIR)/io.Tpo $(DEPDIR)/io.Po
#	source='jpeg/io.cpp' object='io.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o io.obj `if test -f 'jpeg/io.cpp'; then $(CYGPATH_W) 'jpeg/io.cpp'; else $(CYGPATH_W) '$(srcdir)/jpeg/io.cpp'; fi`

ta3d_jpg.o: jpeg/ta3d_jpg.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ta3d_jpg.o -MD -MP -MF $(DEPDIR)/ta3d_jpg.Tpo -c -o ta3d_jpg.o `test -f 'jpeg/ta3d_jpg.cpp' || echo '$(srcdir)/'`jpeg/ta3d_jpg.cpp
	mv -f $(DEPDIR)/ta3d_jpg.Tpo $(DEPDIR)/ta3d_jpg.Po
#	source='jpeg/ta3d_jpg.cpp' object='ta3d_jpg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ta3d_jpg.o `test -f 'jpeg/ta3d_jpg.cpp' || echo '$(srcdir)/'`jpeg/ta3d_jpg.cpp

ta3d_jpg.obj: jpeg/ta3d_jpg.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ta3d_jpg.obj -MD -MP -MF $(DEPDIR)/ta3d_jpg.Tpo -c -o ta3d_jpg.obj `if test -f 'jpeg/ta3d_jpg.cpp'; then $(CYGPATH_W) 'jpeg/ta3d_jpg.cpp'; else $(CYGPATH_W) '$(srcdir)/jpeg/ta3d_jpg.cpp'; fi`
	mv -f $(DEPDIR)/ta3d_jpg.Tpo $(DEPDIR)/ta3d_jpg.Po
#	source='jpeg/ta3d_jpg.cpp' object='ta3d_jpg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ta3d_jpg.obj `if test -f 'jpeg/ta3d_jpg.cpp'; then $(CYGPATH_W) 'jpeg/ta3d_jpg.cpp'; else $(CYGPATH_W) '$(srcdir)/jpeg/ta3d_jpg.cpp'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS


all:
	!(test -e ta3d) || mv ta3d ../ta3d-bin
	!(test -e ta3d.exe) || mv ta3d.exe ../ta3d-bin.exe
	!(test -e hpiview) || mv hpiview ../
	!(test -e hpiview.exe) || mv hpiview.exe ../
	!(test -e 3dmeditor) || mv 3dmeditor ../3dmeditor-bin
	!(test -e 3dmeditor.exe) || mv 3dmeditor.exe ../
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
